<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.hackDefender.dao.ChallengeMapper">
    <resultMap id="BaseResultMap" type="org.hackDefender.pojo.Challenge">
        <constructor>
            <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="category_id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="name" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="detail" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="golden" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="status" jdbcType="BIT" javaType="java.lang.Boolean"/>
            <arg column="memory_limit" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="cup_limit" jdbcType="DOUBLE" javaType="java.lang.Double"/>
            <arg column="docker_image" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="script_url" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="port" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
            <arg column="update_time" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
        </constructor>
    </resultMap>
    <sql id="Base_Column_List">
    id, category_id, name, detail, golden, status, memory_limit, cup_limit, docker_image, 
    script_url, port, create_time, update_time
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from hackerdefender_challenge
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from hackerdefender_challenge
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="org.hackDefender.pojo.Challenge">
        <selectKey resultType="int" order="AFTER" keyProperty="id">
            SELECT LAST_INSERT_ID() AS id
        </selectKey>
        insert into hackerdefender_challenge
        (id, category_id, name,
        detail, golden, status,
        memory_limit, cup_limit, docker_image,
        script_url, port, create_time,
        update_time)
        values (#{id,jdbcType=INTEGER}, #{categoryId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR},
        #{detail,jdbcType=VARCHAR}, #{golden,jdbcType=INTEGER}, #{status,jdbcType=BIT},
        #{memoryLimit,jdbcType=VARCHAR}, #{cupLimit,jdbcType=DOUBLE}, #{dockerImage,jdbcType=VARCHAR},
        #{scriptUrl,jdbcType=VARCHAR}, #{port,jdbcType=INTEGER}, now(),
        now())
    </insert>
    <insert id="insertSelective" parameterType="org.hackDefender.pojo.Challenge">
        insert into hackerdefender_challenge
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="categoryId != null">
                category_id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="detail != null">
                detail,
            </if>
            <if test="golden != null">
                golden,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="memoryLimit != null">
                memory_limit,
            </if>
            <if test="cupLimit != null">
                cup_limit,
            </if>
            <if test="dockerImage != null">
                docker_image,
            </if>
            <if test="scriptUrl != null">
                script_url,
            </if>
            <if test="port != null">
                port,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="categoryId != null">
                #{categoryId,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="detail != null">
                #{detail,jdbcType=VARCHAR},
            </if>
            <if test="golden != null">
                #{golden,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                #{status,jdbcType=BIT},
            </if>
            <if test="memoryLimit != null">
                #{memoryLimit,jdbcType=VARCHAR},
            </if>
            <if test="cupLimit != null">
                #{cupLimit,jdbcType=DOUBLE},
            </if>
            <if test="dockerImage != null">
                #{dockerImage,jdbcType=VARCHAR},
            </if>
            <if test="scriptUrl != null">
                #{scriptUrl,jdbcType=VARCHAR},
            </if>
            <if test="port != null">
                #{port,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                now(),
            </if>
            <if test="updateTime != null">
                now(),
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="org.hackDefender.pojo.Challenge">
        update hackerdefender_challenge
        <set>
            <if test="categoryId != null">
                category_id = #{categoryId,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="detail != null">
                detail = #{detail,jdbcType=VARCHAR},
            </if>
            <if test="golden != null">
                golden = #{golden,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=BIT},
            </if>
            <if test="memoryLimit != null">
                memory_limit = #{memoryLimit,jdbcType=VARCHAR},
            </if>
            <if test="cupLimit != null">
                cup_limit = #{cupLimit,jdbcType=DOUBLE},
            </if>
            <if test="dockerImage != null">
                docker_image = #{dockerImage,jdbcType=VARCHAR},
            </if>
            <if test="scriptUrl != null">
                script_url = #{scriptUrl,jdbcType=VARCHAR},
            </if>
            <if test="port != null">
                port = #{port,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = now(),
            </if>
            <if test="updateTime != null">
                update_time = now(),
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="org.hackDefender.pojo.Challenge">
    update hackerdefender_challenge
    set category_id = #{categoryId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      detail = #{detail,jdbcType=VARCHAR},
      golden = #{golden,jdbcType=INTEGER},
      status = #{status,jdbcType=BIT},
      memory_limit = #{memoryLimit,jdbcType=VARCHAR},
      cup_limit = #{cupLimit,jdbcType=DOUBLE},
      docker_image = #{dockerImage,jdbcType=VARCHAR},
      script_url = #{scriptUrl,jdbcType=VARCHAR},
      port = #{port,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = now()
    where id = #{id,jdbcType=INTEGER}
  </update>
    <select id="checkId" parameterType="int" resultType="int">
        select count(1)
        from hackerdefender_challenge
        where id=#{challengeId}
    </select>
    <select id="selectAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from hackerdefender_challenge
    </select>
    <select id="selectByName" resultMap="BaseResultMap" parameterType="string">
        select
        <include refid="Base_Column_List"/>
        from hackerdefender_challenge
        where name=#{name}
        order by id desc LIMIT 1;
    </select>
    <select id="selectScript" resultType="string" parameterType="int">
        select
        script_url
        from hackerdefender_challenge
        where id=#{challengeId}
    </select>
</mapper>