<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.hackDefender.dao.ContainerMapper">
    <resultMap id="BaseResultMap" type="org.hackDefender.pojo.Container">
        <constructor>
            <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="user_id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="challenge_id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="container_id" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="renew_count" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="uuid" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="port" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="status" jdbcType="BIT" javaType="java.lang.Boolean"/>
            <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
            <arg column="update_time" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
        </constructor>
    </resultMap>
    <sql id="Base_Column_List">
    id, user_id, challenge_id, renew_count, container_id,uuid, port, status, create_time, update_time
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from challenge_container
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from challenge_container
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="org.hackDefender.pojo.Container">
    insert into challenge_container (id, user_id, challenge_id, 
      renew_count, uuid, ,container_id,port,
      status, create_time, update_time
      )
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{challengeId,jdbcType=INTEGER}, 
      #{renewCount,jdbcType=INTEGER}, #{uuid,jdbcType=VARCHAR},#{containerId,jdbcType=VARCHAR} ,#{port,jdbcType=INTEGER},
      #{status,jdbcType=BIT}, now(), now()
      )
  </insert>
    <insert id="insertSelective" parameterType="org.hackDefender.pojo.Container">
        insert into challenge_container
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="challengeId != null">
                challenge_id,
            </if>
            <if test="renewCount != null">
                renew_count,
            </if>
            <if test="uuid != null">
                uuid,
            </if>
            <if test=" containerId != null">
                container_id,
            </if>
            <if test="port != null">
                port,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="challengeId != null">
                #{challengeId,jdbcType=INTEGER},
            </if>
            <if test="renewCount != null">
                #{renewCount,jdbcType=INTEGER},
            </if>
            <if test="uuid != null">
                #{uuid,jdbcType=VARCHAR},
            </if>
            <if test="containerId != null">
                #{containerId,jdbcType=VARCHAR},
            </if>
            <if test="port != null">
                #{port,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                #{status,jdbcType=BIT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                now(),
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="org.hackDefender.pojo.Container">
        update challenge_container
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="challengeId != null">
                challenge_id = #{challengeId,jdbcType=INTEGER},
            </if>
            <if test="renewCount != null">
                renew_count = #{renewCount,jdbcType=INTEGER},
            </if>
            <if test="uuid != null">
                uuid = #{uuid,jdbcType=VARCHAR},
            </if>
            <if test="containerId != null">
                container_id = #{uuid,jdbcType=VARCHAR},
            </if>
            <if test="port != null">
                port = #{port,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=BIT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = now(),
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="org.hackDefender.pojo.Container">
    update challenge_container
    set user_id = #{userId,jdbcType=INTEGER},
      challenge_id = #{challengeId,jdbcType=INTEGER},
      renew_count = #{renewCount,jdbcType=INTEGER},
      uuid = #{uuid,jdbcType=VARCHAR},
      container_id=#{containerId,jdbcType=VARCHAR}
      port = #{port,jdbcType=INTEGER},
      status = #{status,jdbcType=BIT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = now()
    where id = #{id,jdbcType=INTEGER}
  </update>
    <select id="selectByUid" parameterType="int" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from challenge_container
        where user_id=#{userId}
    </select>
    <select id="selectByTime" parameterType="string" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from challenge_container
        where
        <![CDATA[ create_time <= #{date}]]>
    </select>
    <select id="selectByUidAndCId" parameterType="int" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from challenge_container
        where user_id=#{userId}
    </select>
    <select id="checkUid" resultType="int" parameterType="int">
        select
        count(1)
        from challenge_container
        where user_id=#{userId}
    </select>
    <select id="selectAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from challenge_container
    </select>
    <select id="selectContainerID" resultType="string" parameterType="int">
        select container_id
        from challenge_container
        where user_id=#{userId}
    </select>
    <select id="selectRenewCountById" resultType="int" parameterType="int">
        select renew_count
        from challenge_container
        where user_id=#{userId}
    </select>

</mapper>